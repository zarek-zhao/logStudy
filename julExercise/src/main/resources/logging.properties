# RootLogger使用的处理器，在获取RootLogger对象时进行的设置
# 默认的情况下，下述配置的是控制台的处理器，只能往控制台上进行输出操作
# 如果想要添加其他的处理器，在当前处理器类后面通过以逗号的形式进行分隔，可以添加多个处理器
handlers= java.util.logging.ConsoleHandler

# RootLogger的日志级别
# 默认的情况下，这是全局的日志级别，如果不手动配置其他的日志级别
# 则默认输出下述配置的级别以及更高的级别
.level= INFO

# 文件处理器属性设置
# 输出日志文件的路径
java.util.logging.FileHandler.pattern = %h/java%u.log
# 输出日志文件的限制(50000字节)
java.util.logging.FileHandler.limit = 50000
# 设置日志文件的数量
java.util.logging.FileHandler.count = 1
# 输出日志的格式
# 默认是以XML的方式进行的输出
java.util.logging.FileHandler.formatter = java.util.logging.XMLFormatter
# 设置日志以追加的方式记录
java.util.logging.FileHandler.append = true

# 自定义的logger
com.zarek.handlers=java.util.logging.FileHandler
# 自定义logger的日志等级
com.zarek.level=CONFIG
# 忽略掉父logger的日志设置
com.zarek.useParentHandlers=false


# 控制台处理器属性设置
# 控制台输出默认的级别
java.util.logging.ConsoleHandler.level = INFO
# 控制台默认输出的格式
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

# 也可以将日志级别设定到具体的某个包下
# com.xyz.foo.level = SEVERE
